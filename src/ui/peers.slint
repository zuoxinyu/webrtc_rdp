import {Button, HorizontalBox, VerticalBox, GridBox} from "std-widgets.slint";
import {ClientState, PeerData} from "global.slint";

component PeerItem {
    in property<PeerData> peer;
    out property<bool>    connected: false;

    touch := TouchArea {}

    VerticalLayout {
        spacing: 4px;

        Rectangle {
            width: 180px;
            height: 120px;
            border-color: black;
            border-width: 1px;
        }

        HorizontalLayout {
            height: 40px;
            alignment: space-between;
            Text {
                vertical-alignment: center;
                text: peer.name;
                width: 30%;
            }

            Button {
                text: "o";
                clicked => {
                    if (!ClientState.calling) {
                        ClientState.connect(peer.id);
                        ClientState.current = peer;
                        ClientState.calling = true;
                        self.text = "x";
                    } else {
                        ClientState.disconnect();
                        ClientState.calling = false;
                        self.text = "o";
                    }
                }
            }

            Button {
                text: "c";
                clicked => {
                    ClientState.show-chat = !ClientState.show-chat;
                }
            }

            Button {
                text: "s";
                clicked => {
                    ClientState.show-stat = true;
                }
            }
        }
    }
}

export component PeerList {
    in property <[PeerData]> peers <=> ClientState.peers;

    Rectangle {
        for p[idx] in peers: PeerItem {
            x: Math.mod(idx, Math.floor((parent.width - 20px) / (self.width + 20px))) * (self.width + 20px) + 20px;
            y: Math.floor(idx / Math.floor((parent.width - 20px) / (self.width + 20px))) * (self.height + 20px) + 20px;
            peer: p;
        }
    }
}

